declare const roundedNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const rounded: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const rounded2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedRNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedLNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedRSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedLSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedT: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedR: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedB: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedL: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedRMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedLMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedRLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedLLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedRXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedLXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedT2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedR2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedB2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedL2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedRFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedLFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTlNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTrNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBrNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBlNone: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTlSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTrSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBrSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBlSm: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTr: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBr: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTlMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTrMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBrMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBlMd: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTlLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTrLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBrLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBlLg: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTlXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTrXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBrXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBlXl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTl2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTr2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBr2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBl2Xl: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTlFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedTrFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBrFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
declare const roundedBlFull: (node: import("@isotope/core/lib/node").IsotopeNode<any, import("../../declarations").Context>) => void;
export { roundedNone, roundedSm, rounded, roundedMd, roundedLg, roundedXl, rounded2Xl, roundedFull, roundedTNone, roundedRNone, roundedBNone, roundedLNone, roundedTSm, roundedRSm, roundedBSm, roundedLSm, roundedT, roundedR, roundedB, roundedL, roundedTMd, roundedRMd, roundedBMd, roundedLMd, roundedTLg, roundedRLg, roundedBLg, roundedLLg, roundedTXl, roundedRXl, roundedBXl, roundedLXl, roundedT2Xl, roundedR2Xl, roundedB2Xl, roundedL2Xl, roundedTFull, roundedRFull, roundedBFull, roundedLFull, roundedTlNone, roundedTrNone, roundedBrNone, roundedBlNone, roundedTlSm, roundedTrSm, roundedBrSm, roundedBlSm, roundedTl, roundedTr, roundedBr, roundedBl, roundedTlMd, roundedTrMd, roundedBrMd, roundedBlMd, roundedTlLg, roundedTrLg, roundedBrLg, roundedBlLg, roundedTlXl, roundedTrXl, roundedBrXl, roundedBlXl, roundedTl2Xl, roundedTr2Xl, roundedBr2Xl, roundedBl2Xl, roundedTlFull, roundedTrFull, roundedBrFull, roundedBlFull };
